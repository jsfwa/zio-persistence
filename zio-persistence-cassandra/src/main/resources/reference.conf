cassandra.persistence {
  partition-size = 100000

  write-parallelism = 10

  write-queue-size = 16000 //rounded to the nearest power of 2

  write-profile-name = "write-profile"

  replay-profile-name = "replay-profile"

  snapshot-profile-name = "snapshot-profile"

  journal {
    migration = false

    keyspace = "persistence"

    replication-strategy = ${cassandra.persistence.simple-strategy}

    gc-grace-seconds = 864000

    table = "journal"

    compaction-strategy = ${cassandra.persistence.compaction-strategy}

    compaction-strategy {
      class = "SizeTieredCompactionStrategy"
    }
  }

  snapshot {
    migration = false

    keyspace = "persistence_snapshots"

    replication-strategy = ${cassandra.persistence.simple-strategy}

    gc-grace-seconds = 864000

    table = "snapshot"

    compaction-strategy = ${cassandra.persistence.compaction-strategy}

    compaction-strategy {
      class = "LeveledCompactionStrategy"
    }
  }

  simple-strategy {
    replication-factor = 1
  }

  network-topology-strategy {
    //dc1 = 3
    //dc2 = 1
    //...
  }

  compaction-strategy {
    //Common
    enabled = true

    tombstone-compaction-interval = 86400

    tombstone-threshold = 0.2

    unchecked-tombstone-compaction = false

    //SizeTieredCompactionStrategy
    bucket-high = 1.5
    bucket-low = 0.5
    max-threshold = 32
    min-threshold = 4
    min-sstable-size = 50

    //LeveledCompactionStrategy
    sstable-size-in-mb = 50
  }
}

datastax-java-driver {

  advanced.connection {
    pool {
      local {
        size = 4
      }
      remote {
        size = 4
      }
    }

    max-requests-per-connection = 2048
  }

  profiles {
    write-profile {
      basic.request.timeout = 100 milliseconds
      basic.request.consistency = QUORUM
      default-idempotence = true
    }
    replay-profile {
      basic.request.timeout = 1 second
      basic.request.consistency = QUORUM
      page-size = 250
    }
    snapshot-profile {
      basic.request.timeout = 5 seconds
      basic.request.consistency = QUORUM
      default-idempotence = true
    }
  }
}
